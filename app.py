# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eCfX-EUN1fUETPCjY7vJCNINMiNKbxyI
"""


# Import required libraries
import pandas as pd
import re
import streamlit as st

# Load the Excel file
def load_data(filepath):
    df = pd.read_excel("/content/drive/MyDrive/meat/meat_read.xlsx")
    return df

# Preprocess exclude keywords into a flat list
def get_exclude_keywords(df):
    exclude_keywords = df['Exclude Retailer description'].dropna().astype(str).tolist()
    # Flatten comma-separated values
    flat_keywords = []
    for keyword in exclude_keywords:
        flat_keywords.extend([k.strip().upper() for k in keyword.split(',')])
    return set(flat_keywords)

# Preprocess valid consolidated keywords
def get_consolidated_keywords(df):
    return df['Consolidated nan descript'].dropna().unique().tolist()

# Predict function to match description

def predict_consolidated_description(description, consolidated_keywords, exclude_keywords):
    description_upper = description.upper()
    # Check for exclude keywords
    for word in exclude_keywords:
        if re.search(rf"\\b{re.escape(word)}\\b", description_upper):
            return "Exclude"
    # Check for valid consolidated keywords
    for keyword in consolidated_keywords:
        keyword_parts = keyword.split()
        for part in keyword_parts:
            if re.search(rf"\\b{re.escape(part)}\\b", description_upper):
                return keyword
    return "No Match"

# Streamlit App
def main():
    st.title("Meat Description Classifier")
    st.write("Upload an Excel file with the required columns to classify meat descriptions.")

    uploaded_file = st.file_uploader("Upload your Excel file", type=["xlsx"])

    if uploaded_file is not None:
        df = load_data(uploaded_file)
        exclude_keywords = get_exclude_keywords(df)
        consolidated_keywords = get_consolidated_keywords(df)

        st.write("### Enter a Description to Predict")
        input_description = st.text_input("Best Received External Description")

        if st.button("Predict"):
            result = predict_consolidated_description(input_description, consolidated_keywords, exclude_keywords)
            st.write(f"### Predicted Consolidated nan descript:")
            st.success(result)

if __name__ == '__main__':
    main()
